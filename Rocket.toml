[default]
# address: The application will serve at this address.
#address = "127.0.0.1"
# port: The application will serve on this port.
#port = 8000
# workers: The application will use this number of threads.
#workers = 16
# ident: If we specify false, the application will not put an identity in the server HTTP header; if we specify string, the application will use it as an identity in the server HTTP header.
#ident = "Rocket"
# keep_alive: Keep-alive timeout in seconds. Use 0 to disable keep_alive.
#keep_alive = 5
# log_level: The maximum level to log (off/normal/debug/critical).
#log_level = "normal"
# temp_dir: The path to a directory to store temporary files.
#temp_dir = "/tmp"
# cli_colors: Use colors and emojis on the log, or not. This is useful to disable bells and whistles in the release environment.
#cli_colors = true
# secret_key: The Rocket application has a type to store private cookies in the application. The private cookies are encrypted by this key. The key length is 256 bits, and you can generate it using tools such as openssl rand -base64 32. Since this is an important key, you might want to keep it in a safe place.
secret_key = "Aq2nmBPcLv8LcFxj98Pgk9dniTo1H2Be5ZeXemhfJzs="

# tls: Use tls.key and tls.certs to enter the path to your TLS (Transport Layer Security) key and certificate file.
[default.tls]
#certs = "/some/directory/cert-chain.pem"
#key = "/some/directory/key.pem"

# limits: This configuration is nested and is used to limit the server read size. You can write the value in multibyte units such as 1 MB (megabyte) or 1 MiB (mebibyte). There are several default options:
[default.limits]
# limits.form – 32 KiB
#form = "32KiB"
# limits.data-form – 2 MiB
#data-form = "2MiB"
# limits.file – 1 MiB
#file = "1MiB"
# limits.string – 8 KiB
#string = "8KiB"
# limits.bytes – 8 KiB
#bytes = "8KiB"
# limits.json – 1 MiB
#json = "1MiB"
# limits.msgpack – 1 MiB
#msgpack = "1MiB"

# shutdown: If a web application is terminated abruptly when it's still processing something, the data being processed might accidentally get corrupted. For example, let's say a Rocket application is in the middle of sending updated data to the database server, but the process is then terminated suddenly. As a result, there is data inconsistency. This option configures Rocket's smooth shutdown behavior. Like limits, it has several subconfigurations:
[default.shutdown]
# shutdown.ctrlc – Does the application ignore the Ctrl + C keystrokes or not?
#ctrlc = true
# shutdown.signals – An array of Unix signals that trigger a shutdown. Only works on Unix or Unix-like operating systems.
#signals = ["term"]
# shutdown.grace – The number of seconds in which to finish outstanding server I/O before stopping it.
#grace = 5
# shutdown.mercy – The number of seconds in which to finish outstanding connection I/O before stopping it.
#mercy = 5
# shutdown.force – Specifies whether or not to kill a process that refuses to cooperate.
#force = true

[development]
port = 8080
ident = "Rocket Dev"

[release]
port = 9999
